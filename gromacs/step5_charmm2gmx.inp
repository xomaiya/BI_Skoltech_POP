* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) v2.0 on Mar, 30. 2020. JOBID=8557280676
* PREPARE INPUT FILES IN GROMACS FORMAT
* 

delete atom sele all end
open read unit 10 card name step5_assembly.psf
read psf  unit 10 card
open read unit 10 card name step5_assembly.crd
read coor unit 10 card

!
! keep each component separately
!

open write unit 51 card name gromacs/junk.str

calc nseg = ?NSEG
calc iseg = 1

label dseg
   coor stat sele iseg @iseg end
   set segid = ?selsegi

   define XXX sele .bonded. segid @segid .and. .not. segid @segid show end
   if ?seliseg .ne. 0 if ?seliseg .lt. @iseg goto nextseg
   if ?nsel .gt. 0 then
      set nbondseg = ?nsel
      set ibondseg = 1

      define XXX sele XXX .or. segid @segid end
      define DONE sele segid @segid end
      label dobond
         define TEST sele XXX .and. .not. DONE show end
         set segid2 = ?selsegi
         define XXX sele XXX .or. segid @segid2 end
         define DONE sele DONE .or. segid @segid2 end

         increase ibondseg by 1
      if ibondseg .le. @nbondseg goto dobond

      define XXX sele XXX .or. .bonded. XXX end
      if ?seliseg .lt. @iseg goto nextseg
      set nxxx = ?nsel
      define DONE sele DONE end
      set ndone = ?nsel
      if nxxx .ne. @ndone then
         calc nbondseg = @nxxx - @ndone
         set ibondseg = 1
         goto dobond
      endif
   else
      define XXX sele XXX .or. segid @segid end
   endif

   bomlev -1
   delete atom sele .not. XXX end
   bomlev 0

   calc njseg = ?NSEG
   calc jseg  = 1

   label djseg
      if jseg .ne. 1 then
         coor stat sele iseg 2 end
         set segid2 = ?selsegi

         join @segid @segid2 renumber
      endif

      incr jseg by 1
   if jseg .le. @njseg goto djseg

   if segid .eq. MEMB then
      open write unit 10 card name gromacs/junk_memb.psf
      write psf  unit 10 card
      open write unit 10 card name gromacs/junk_memb.crd
      write coor unit 10 card
      write title unit 51
      * stream gromacs/junk_memb.str
      *
      stream gromacs/step5_charmm2gmx.memb.str
   else
      open write unit 10 card name gromacs/junk_@segid.psf
      write psf  unit 10 card
      open write unit 10 card name gromacs/junk_@segid.crd
      write coor unit 10 card
      write title unit 51
      * open read unit 10 card name gromacs/junk_@segid.psf
      * read psf  unit 10 card append
      * open read unit 10 card name gromacs/junk_@segid.crd
      * read coor unit 10 card append
      *
      open write unit 53 card name gromacs/junk_@segid_rest.itp
      stream gromacs/step5_charmm2gmx.prot.str
      close unit 53
      system "python gromacs/step5_charmm2gmx.rest.py gromacs/junk_@SEGID_rest.itp"
   endif

   delete atom sele all end

   open read unit 10 card name step5_assembly.psf
   read psf  unit 10 card

   open read unit 10 card name step5_assembly.crd
   read coor unit 10 card

   label nextseg

   incr iseg by 1

if iseg .le. @nseg goto dseg

delete atom sele all end

!
! Read components
!

stream gromacs/junk.str

calc xcen = @A/2
calc ycen = @B/2
calc zcen = @C/2

coor trans xdir @xcen ydir @ycen zdir @zcen

!
! Write PSF, coordinates, and information of the assembled system
!

open write unit 10 card name gromacs/step5_charmm2gmx.psf
write psf  unit 10 card
* CHARMM2GMX PSF
*
close unit 10

open write unit 10 card name gromacs/step5_charmm2gmx.oldpsf
write psf  unit 10 card oldpsf
* CHARMM2GMX OLD PSF
*
close unit 10


open write unit 10 card name gromacs/step5_charmm2gmx.crd
write coor unit 10 card
* CHARMM2GMX CRD
*
close unit 10

open write unit 10 card name gromacs/step5_charmm2gmx.pdb
write coor unit 10 pdb
* CRYST1  @A  @B  @C  @alpha  @beta  @gamma
* CHARMM2GMX PDB
*
close unit 10

system "sed -i -e 's/REMARK  CRYST1/CRYST1/g' gromacs/step5_charmm2gmx.pdb"

system "python gromacs/psf2itp.py toppar.str gromacs/step5_charmm2gmx.psf"
system "rm gromacs/junk*"

